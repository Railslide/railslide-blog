<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Railslide - til</title><link href="https://railslide.io/" rel="alternate"/><link href="https://railslide.io/feeds/til.atom.xml" rel="self"/><id>https://railslide.io/</id><updated>2024-12-04T00:00:00+01:00</updated><entry><title>TIL: =+ doesn't throw an error</title><link href="https://railslide.io/til-equal-plus-doesnt-throw-an-error.html" rel="alternate"/><published>2024-12-04T00:00:00+01:00</published><updated>2024-12-04T00:00:00+01:00</updated><author><name>Giulia</name></author><id>tag:railslide.io,2024-12-04:/til-equal-plus-doesnt-throw-an-error.html</id><summary type="html">&lt;p&gt;Mistyping &lt;code&gt;=+&lt;/code&gt; instead of &lt;code&gt;+=&lt;/code&gt; can lead to some sneaky bugs&lt;/p&gt;</summary><content type="html">&lt;p&gt;A while ago I decided to switch to the Ansi (aka US) layout for my keyboard. The process was fairly painless: I adapted to the new movements fairly quickly and typing symbols has become way simpler. One of the things I still struggle though is &lt;code&gt;=+&lt;/code&gt;, as in all the layouts I have used in the past the key combination was the opposite if the US one, i.e. &lt;code&gt;=&lt;/code&gt; would require me to press shift and &lt;code&gt;+&lt;/code&gt; wouldn't. So it's not uncommon for me to hit &lt;code&gt;+&lt;/code&gt; instead of &lt;code&gt;=&lt;/code&gt; and vice versa, which led me to stumble on an interesting bug.&lt;/p&gt;
&lt;p&gt;In python you can increment a variable by using the shorthand &lt;code&gt;+=&lt;/code&gt;, i.e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# foo is now 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, due to my layout switch, &lt;code&gt;+=&lt;/code&gt; has a high chance of mistyping for me. However, I had always assumed that either the interpreter or my editor would have screamed at me if I were to type it in reverse. That turned out not to be the case.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c1"&gt;# note the typo&lt;/span&gt;
&lt;span class="c1"&gt;# I was expecting an error here, but nope.&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# foo is now 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Basically, python considers &lt;code&gt;foo =+ 1&lt;/code&gt; the same as &lt;code&gt;foo = +1&lt;/code&gt;. And that explains why there was no error and why the output of my script was completely wrong. The dark side of it is that the typo is not the easiest one to spot, which might lead to quite some confusion and debugging time (as it happened to me today).&lt;/p&gt;
&lt;p&gt;Oh well, today I learned. And from now on I'll know what to double check for.&lt;/p&gt;</content><category term="til"/><category term="TIL"/><category term="python"/></entry><entry><title>TIL: strip does not do what I think it does</title><link href="https://railslide.io/til-strip-does-not-do-what-i-think-it-does.html" rel="alternate"/><published>2023-02-15T00:00:00+01:00</published><updated>2023-02-15T00:00:00+01:00</updated><author><name>Giulia</name></author><id>tag:railslide.io,2023-02-15:/til-strip-does-not-do-what-i-think-it-does.html</id><summary type="html">&lt;p&gt;It turns out I have been using it wrong for all this time!&lt;/p&gt;</summary><content type="html">&lt;p&gt;I always thought &lt;code&gt;strip&lt;/code&gt;, &lt;code&gt;lstrip&lt;/code&gt; and &lt;code&gt;rstrip&lt;/code&gt; would simply match and strip whatever string it was passed to them. However, it turns out that's not how they work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s2"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# Expected outcome: &amp;#39;lo world&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;o world&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# Actual outcome&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What &lt;code&gt;strip&lt;/code&gt;, &lt;code&gt;lstrip&lt;/code&gt; and &lt;code&gt;rstrip&lt;/code&gt; actually do is to remove &lt;strong&gt;any&lt;/strong&gt; of the specified characters until a non-matching character is encountered. So in the example above, the second &lt;code&gt;l&lt;/code&gt; still matches the provided set of chars and hence gets removed. &lt;/p&gt;
&lt;p&gt;I guess most of the time I just got lucky and never stumbled on the actual behavior. But what I should have used in most of the cases is actually &lt;code&gt;removeprefix&lt;/code&gt; and &lt;code&gt;removesuffix&lt;/code&gt;, as the docs suggest.&lt;/p&gt;
&lt;p&gt;Today I learned.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.rstrip"&gt;Docs for &lt;code&gt;strip&lt;/code&gt;&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.lstrip"&gt;Docs for &lt;code&gt;lstrip&lt;/code&gt;&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.rstrip"&gt;Docs for &lt;code&gt;rstrip&lt;/code&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;</content><category term="til"/><category term="TIL"/><category term="python"/></entry></feed>