<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Railslide - tiling-window-managers</title><link href="https://railslide.io/" rel="alternate"/><link href="https://railslide.io/feeds/tiling-window-managers.atom.xml" rel="self"/><id>https://railslide.io/</id><updated>2025-08-19T00:00:00+02:00</updated><entry><title>Setting up Sway: inputs &amp; outputs</title><link href="https://railslide.io/setting-up-sway-inputs-outputs.html" rel="alternate"/><published>2025-08-19T00:00:00+02:00</published><updated>2025-08-19T00:00:00+02:00</updated><author><name>Giulia</name></author><id>tag:railslide.io,2025-08-19:/setting-up-sway-inputs-outputs.html</id><summary type="html">&lt;p&gt;Part 2 of the series of articles about setting up Sway. Keyboard, mouse, and multiple screens.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;This article is part 2 of &lt;a href="/tag/setting-up-sway.html"&gt;a series about setting up Sway&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Inputs (aka keyboard, mouse, etc)&lt;/h2&gt;
&lt;p&gt;One of the first things I used to do after installing a desktop environment was to adjust keyboard and mouse behavior. Thankfully Sway lets you define those in the config, so now I only need to make sure my config is in place and everything just works out of the box.&lt;/p&gt;
&lt;p&gt;So how do you go for customizing them? Once again, the friendly config provides an example as well as some helpful text&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gu"&gt;##&lt;/span&gt;# Input configuration
&lt;span class="gh"&gt;#&lt;/span&gt;
# Example configuration:
&lt;span class="gh"&gt;#&lt;/span&gt;
#   input &amp;quot;2:14:SynPS/2_Synaptics_TouchPad&amp;quot; {
&lt;span class="gh"&gt;#&lt;/span&gt;       dwt enabled
&lt;span class="gh"&gt;#&lt;/span&gt;       tap enabled
&lt;span class="gh"&gt;#&lt;/span&gt;       natural_scroll enabled
&lt;span class="gh"&gt;#&lt;/span&gt;       middle_emulation enabled
&lt;span class="gh"&gt;#&lt;/span&gt;   }
&lt;span class="gh"&gt;#&lt;/span&gt;
# You can get the names of your inputs by running: swaymsg -t get_inputs
&lt;span class="gh"&gt;#&lt;/span&gt; Read `man 5 sway-input` for more information about this section.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So if you want to edit the config for a specific input device, you'd just run &lt;code&gt;swaymsg -t get_inputs&lt;/code&gt;, find it in the list, and adjust its behavior accordingly.&lt;/p&gt;
&lt;p&gt;This is great, but what if I wanted to have certain behaviors for ALL my keyboards or all my mice? Well, you simply have to define the behaviors on the input type, rather than on the input identifier. For example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;keyboard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;xkb_layout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;us,it,se&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keyboard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;layout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;switcher&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;caps&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;lock&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ctrl&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;xkb_options&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;grp:alt_shift_toggle, ctrl:nocaps&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The snippet above would make the &lt;code&gt;us&lt;/code&gt;, &lt;code&gt;it&lt;/code&gt;, and &lt;code&gt;se&lt;/code&gt; layouts available, set &lt;kbd&gt;alt&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; as layout switcher, and remap &lt;kbd&gt;caps-lock&lt;/kbd&gt; to &lt;kbd&gt;ctrl&lt;/kbd&gt;, for ALL keyboards.&lt;/p&gt;
&lt;p&gt;For a list of layouts and options for &lt;code&gt;xkb&lt;/code&gt;, &lt;a href="https://man.archlinux.org/man/xkeyboard-config-2.7.en"&gt;the man page for it&lt;/a&gt; is a great resource.&lt;/p&gt;
&lt;h2&gt;Outputs (aka screens)&lt;/h2&gt;
&lt;p&gt;Outputs in Sway work similarly to inputs. You can get a list of the available ones with &lt;code&gt;swaymsg -t get_outputs&lt;/code&gt; and define their setup, as suggested in the config itself&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;#&lt;/span&gt; Example configuration:
&lt;span class="gh"&gt;#&lt;/span&gt;
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
&lt;span class="gh"&gt;#&lt;/span&gt;
# You can get the names of your outputs by running: swaymsg -t get_outputs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this would probably work great if you have a very static setup, like a single screen that you only need to set up once. However, if you happen to have a laptop and one or more external screens or setups (e.g. home and office), you'll likely want to use &lt;a href="https://gitlab.freedesktop.org/emersion/kanshi"&gt;Kanshi&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Kanshi allows you to define output profiles that are automatically enabled and disabled when screens are plugged in or out. If you are familiar with Autorandr, Kanshi is the Wayland equivalent of it.&lt;/p&gt;
&lt;p&gt;To setup Kanshi, you first need to install the &lt;code&gt;kanshi&lt;/code&gt; package with your favourite package manager. Next, create a config file at &lt;code&gt;~/.config/kanshi/config&lt;/code&gt; (I personally don't git commit this file to my dotfiles, since it's very machine specific) and fill it with your desired setup. For example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;profile {
    output LVDS-1 position 0,0 scale 1.5
    output &amp;quot;Some Company ASDF 4242&amp;quot; mode 1600x900 position 1920,0
}

profile {
    output LVDS-1 enable scale 2
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The snippet above defines two different profiles, one for the laptop built-in monitor only and the other for when a specific external screen is plugged in. Kanshi will then take care of enabling the correct profile whenever all the listed devices are connected.&lt;/p&gt;
&lt;p&gt;One thing worth paying attention to is the position parameter, especially if you want multiple outputs to be displayed next to each other. The way you achieve that, is to set the position of the screen you want on the left to &lt;code&gt;0,0&lt;/code&gt; and the one you want to the right to &lt;code&gt;&amp;lt;left_screen_width&amp;gt;,0&lt;/code&gt;. You can get the width of the screen by running &lt;code&gt;swaymsg -t get_outputs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Last but not least, let's tell Sway to use Kanshi by adding the following to your config&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;exec_always &amp;quot;pkill kanshi; kanshi &amp;amp;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;exec_always&lt;/code&gt; parts guarantees that the command is run even when the Sway config is reloaded (differently from &lt;code&gt;exec&lt;/code&gt;, which will only run at session start). And the rest of the command is just to make sure to stop any running instances of Kanshi, before starting a new one.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That's it! You should now be able to config your inputs an outputs as per your liking!&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://man.archlinux.org/man/xkeyboard-config-2.7.en"&gt;Man page for xkeyboard-config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.freedesktop.org/emersion/kanshi"&gt;Kanshi source code and docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man -k sway&lt;/code&gt;, for a list of all the available Sway man pages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Sway"&gt;Sway - Arch linux wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tiling-window-managers"/><category term="sway"/><category term="wayland"/><category term="desktop-enviroments"/><category term="setting-up-sway"/></entry><entry><title>Setting up Sway: the basics</title><link href="https://railslide.io/setting-up-sway-the-basics.html" rel="alternate"/><published>2025-08-08T00:00:00+02:00</published><updated>2025-08-08T00:00:00+02:00</updated><author><name>Giulia</name></author><id>tag:railslide.io,2025-08-08:/setting-up-sway-the-basics.html</id><summary type="html">&lt;p&gt;The first of a series of article about setting up Sway. How to install Sway, creating a config file, and setting the lock screen up.&lt;/p&gt;</summary><content type="html">&lt;p&gt;A while ago I decided to give window managers a try. After a bit of experimentation I landed on Sway and never went back. So after roughly 1.5 years of using it as my daily driver, I decided that it was finally time to dedicate a series of article to how to set it up.&lt;/p&gt;
&lt;h2&gt;Why Sway&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It is super customizable while still being human-friendly&lt;/li&gt;
&lt;li&gt;It has great docs, an easily understandable config, and a sane defaults set&lt;/li&gt;
&lt;li&gt;It uses Wayland instead of Xorg, which is deprecated and no longer actively maintained&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So if you are after a minimal tiling window managers that can be completely adapted to you needs, without having to go through to a super steep learning curve (hello xmonad), you should definitely give Sway a try.&lt;/p&gt;
&lt;h2&gt;Installing Sway&lt;/h2&gt;
&lt;p&gt;The first step to get started with Sway, is unsurprisingly to install it.&lt;/p&gt;
&lt;p&gt;So pull up your favorite package manager and install the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sway&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;foot&lt;/code&gt; (default terminal emulator)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wmenu&lt;/code&gt; (default application menu)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swaybg&lt;/code&gt; (default wallpaper tool)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can of course change the terminal emulator and application menu later on, but for now let's stick to the default and get Sway up and running.&lt;/p&gt;
&lt;p&gt;After that, if you are using a display a display manager, it's a just a matter of logging out from your current desktop environment and logging in into Sway. If not, running &lt;code&gt;sway&lt;/code&gt; in your terminal will do the trick.&lt;/p&gt;
&lt;p&gt;Here's a list of useful keybindings to start with. The full list can be found in the config file (see below).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keybinding&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;enter&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Launch terminal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;d&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Launch wmenu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;q&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Close the focused window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;e&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Quit Sway&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Reload config&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Getting yourself a config file&lt;/h2&gt;
&lt;p&gt;The first thing you need in order to configure and customize Sway is a config file. The easiest way to get one is to copy the example configuration file located at &lt;code&gt;/etc/sway/config&lt;/code&gt; to &lt;code&gt;~/.config/sway/config&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The file in itself is fairly easy to read and includes plenty of examples. For any other question not covered in the comments or in these articles, &lt;code&gt;man 5 sway&lt;/code&gt; is your friend.&lt;/p&gt;
&lt;h2&gt;Idle and lock screen&lt;/h2&gt;
&lt;p&gt;In order to configure idle and lock screen, you first need to install the packages taking care of them, i.e. &lt;code&gt;swaylock&lt;/code&gt; and &lt;code&gt;swayidle&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then uncomment the dedicated section in the config file and adjust it to your liking&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;#&lt;/span&gt; exec swayidle -w \
&lt;span class="gh"&gt;#&lt;/span&gt;          timeout 300 &amp;#39;swaylock -f -c 000000&amp;#39; \
&lt;span class="gh"&gt;#&lt;/span&gt;          timeout 600 &amp;#39;swaymsg &amp;quot;output * power off&amp;quot;&amp;#39; resume &amp;#39;swaymsg &amp;quot;output * power on&amp;quot;&amp;#39; \
&lt;span class="gh"&gt;#&lt;/span&gt;          before-sleep &amp;#39;swaylock -f -c 000000&amp;#39;
&lt;span class="gh"&gt;#&lt;/span&gt;
# This will lock your screen after 300 seconds of inactivity, then turn off
&lt;span class="gh"&gt;#&lt;/span&gt; your displays after another 300 seconds, and turn your screens back on when
&lt;span class="gh"&gt;#&lt;/span&gt; resumed. It will also lock your screen before your computer goes to sleep.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Great, now your screen will lock itself and power off after the specified time of inactivity. Though you probably also want to be able to lock it also when stepping away from keyboard. So let's add a key binding to the config for it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;bindsym&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="nv"&gt;mod&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;Escape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;killall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;SIGUSR1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;swayidle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That might look like a bit of black magic, so let's break it down. What that line basically does is to set a key binding for &lt;code&gt;$mod+Escape&lt;/code&gt; (mod by default is the logo key) to execute a command.&lt;/p&gt;
&lt;p&gt;Ok, now for the &lt;code&gt;killall -SIGUSR1 swayidle&lt;/code&gt; part. The man page for &lt;code&gt;killall&lt;/code&gt; tells us that&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;killall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;signal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;processes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;signal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SIGTERM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In other words, if no signal is specified, then &lt;code&gt;killall&lt;/code&gt; will terminate the process, otherwise it will just send the provided signal. Then in the man page of &lt;code&gt;swayidle&lt;/code&gt;, we can see that when receiving &lt;code&gt;SIGUSR1&lt;/code&gt; &lt;code&gt;swayidle&lt;/code&gt; will immediately enter idle state (i.e. it will skip it the timeout).&lt;/p&gt;
&lt;p&gt;So basically what that line does is to bind a key combination to sending a signal to &lt;code&gt;swaydle&lt;/code&gt;, so that it immediately enters idle state (aka locking the screen).&lt;/p&gt;
&lt;p&gt;Note though that the command as is will only skip the first timeout (i.e. the one for the screen locking). If you want your command to lock AND power off the screen, you'll have to send the signal a second time (basically one signal for every timeout you want to skip), i.e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;bindsym&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="nv"&gt;mod&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;escape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;killall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;SIGUSR1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;swayidle&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;killall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;SIGUSR1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;swayidle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Great! Now you should have a working Sway and a working lock screen.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man -k sway&lt;/code&gt;, for a list of all the available Sway man pages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Sway"&gt;Sway - Arch linux wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tiling-window-managers"/><category term="sway"/><category term="wayland"/><category term="desktop-enviroments"/><category term="setting-up-sway"/></entry><entry><title>Xmonad keybindings and media keys</title><link href="https://railslide.io/xmonad-keybindings-and-media-keys.html" rel="alternate"/><published>2024-02-18T00:00:00+01:00</published><updated>2024-02-18T00:00:00+01:00</updated><author><name>Giulia</name></author><id>tag:railslide.io,2024-02-18:/xmonad-keybindings-and-media-keys.html</id><summary type="html">&lt;p&gt;How to set up keybindings and make media keys work in Xmonad&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the first things I wanted to get to work once I installed Xmonad were the media keys. I use music as a way to concentrate when coding and having to go through the hassle of finding the player window, reaching for my mouse, and clicking on the control buttons is a waste of time and focus. So controlling playback from my keyboard is a must.&lt;/p&gt;
&lt;p&gt;However Xmonad doesn't support media keys out of the box, so in order to have them working I had to define some keybindings.&lt;/p&gt;
&lt;h2&gt;How keybindings work&lt;/h2&gt;
&lt;p&gt;First I had to import the &lt;code&gt;XMonad.Util.EZConfig&lt;/code&gt; module at the top of my config.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;XMonad.Util.EZConfig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;XMonad.Util.EZConfig&lt;/code&gt; includes &lt;code&gt;additionalKeys&lt;/code&gt; which can be used to define keybindings. The syntax is the following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;myKeyBindings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;mod1Mask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xK_f&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;firefox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- mod+f launches Firefox&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;noModMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xK_Print&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;scrot -s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- PrtScr takes a screenshot&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nf"&gt;myConfig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myTerminal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;modMask&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myModMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;startupHook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myStartupHook&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;&lt;span class="n"&gt;additionalKeys&lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myKeyBindings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;noModMask&lt;/code&gt; is used for when you don't need a modifier, like in the example above where &lt;kdb&gt;PrtScr&lt;/kbd&gt; is all you need to press in order to take a screenshot.&lt;/p&gt;
&lt;p&gt;While that certainly works, it's not exactly the most straightforward syntax. Thankfully the very same module also includes &lt;code&gt;additionalKeysP&lt;/code&gt;, which helps solving exactly that. According to the docs, it uses &lt;em&gt;"Emacs-style keybinding specifications"&lt;/em&gt;, which I would have rather called human-friendly specifications but I guess that wasn't equally catchy.&lt;/p&gt;
&lt;p&gt;So with the new syntax, the config becomes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;myKeyBindings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;M-f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;firefox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;Print&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scrot -s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;myConfig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myTerminal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;modMask&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myModMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;startupHook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myStartupHook&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`additionalKeysP`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myKeyBindings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Much better! A full list of the supported special keys can be found in &lt;a href="https://hackage.haskell.org/package/xmonad-contrib-0.18.0/docs/XMonad-Util-EZConfig.html#g:3"&gt;Xmonad docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Setting media keys up&lt;/h2&gt;
&lt;p&gt;Next was to set up media keys. In order for them to work, besides a keybinding, I also needed something to control the currently active player. For that I installed &lt;code&gt;playerctl&lt;/code&gt; which worked great both from my keyboard and from my headphones.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;myKeyBindings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;M-f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;firefox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;Print&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;scrot -s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;-- Media keys&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;XF86AudioPlay&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;playerctl play-pause&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;XF86AudioNext&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;playerctl next&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;XF86AudioPrev&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;playerctl previous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that if you are using &lt;code&gt;additionalKeys&lt;/code&gt;, you will have to import &lt;code&gt;Graphics.X11.ExtraTypes.XF86&lt;/code&gt; in order to use &lt;code&gt;xF86XK_AudioPlay&lt;/code&gt; and co.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xmonad.org/TUTORIAL.html"&gt;Xmonad configuration tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/package/xmonad-contrib-0.18.0/docs/XMonad-Util-EZConfig.html"&gt;XMonad.Util.EZConfig docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tiling-window-managers"/><category term="xmonad"/></entry><entry><title>Exploring xmonad: Getting started</title><link href="https://railslide.io/exploring-xmonad-getting-started.html" rel="alternate"/><published>2024-02-05T00:00:00+01:00</published><updated>2024-02-05T00:00:00+01:00</updated><author><name>Giulia</name></author><id>tag:railslide.io,2024-02-05:/exploring-xmonad-getting-started.html</id><summary type="html">&lt;p&gt;The first of a series of articles about exploring xmonad and trying to wrap my head around Haskell.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the first article of a series about my experience with setting up xmonad. The idea is to keep track of my journey and to write some handy guides for either someone who might be curious about xmonad as well and/or my future self.&lt;/p&gt;
&lt;h2&gt;Installing all the things&lt;/h2&gt;
&lt;p&gt;What a better place for starting than installing xmonad?&lt;/p&gt;
&lt;p&gt;Ideally you want to install the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xmonad&lt;/code&gt; (duh!)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xmonad-contrib&lt;/code&gt;, xmonad extensions (you can't do much without it!)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dmenu&lt;/code&gt;, launcher/menu for applications&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xterm&lt;/code&gt;, xmonad default terminal emulator. You can switch to your favourite emulator later, but it's good to have xterm available as a fallback.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Arch, I installed all the above via Yay/Pacman and then added a &lt;a href="https://wiki.archlinux.org/title/Xmonad#Problems_with_finding_shared_libraries_after_update"&gt;Pacman hook&lt;/a&gt; to avoid future headaches when updating.&lt;/p&gt;
&lt;h2&gt;Basic configuration&lt;/h2&gt;
&lt;p&gt;Next I created a basic config file. You don't necessarily need one, but I wanted to customize a couple of things already from the start.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;XMonad&lt;/span&gt;

&lt;span class="nf"&gt;myModMask&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mod4Mask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- Use Super as the mod key&lt;/span&gt;
&lt;span class="nf"&gt;myTerminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alacritty&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;-- Actions to perform whenever xmonad starts or is restarted&lt;/span&gt;
&lt;span class="nf"&gt;myStartupHook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;setxkbmap -layout us&amp;quot;&lt;/span&gt;

&lt;span class="nf"&gt;myConfig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myTerminal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;modMask&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myModMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;startupHook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myStartupHook&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- Run xmonad with the settings specified above&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;IO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;()&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xmonad&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myConfig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and saved it into &lt;code&gt;~/.xmonad/xmonad.hs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that the above configuration will not work with xmonad&amp;lt;0.17.&lt;/p&gt;
&lt;p&gt;It's also worth nothing that the location of the config might vary. According to xmonad doc it should go into &lt;code&gt;~/.config/xmonad/xmonad.hs&lt;/code&gt;, which however didn't work for me (thankfully I had xterm installed, otherwise I wouldn't have been able to do anything once I logged into xmonad!). Arch wiki tells you instead to place it into &lt;code&gt;~/.xmonad/xmonad.hs&lt;/code&gt;, which in my case resulted in the config being picked up correctly.&lt;/p&gt;
&lt;h2&gt;Getting around in xmonad&lt;/h2&gt;
&lt;p&gt;Next is to log into xmonad and test if the config is loaded correctly.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;Super+Shift+Enter&lt;/code&gt; launches Alacritty, you're good to go. If not, try moving the config to a different location (see above).&lt;/p&gt;
&lt;p&gt;Here are a list of useful keybindings to start with&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keybinding&lt;/th&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;return&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Launch terminal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Launch dmenu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Close the focused window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;q&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Quit xmonad&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;mod&lt;/kbd&gt; &lt;kbd&gt;q&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Restart xmonad&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xmonad.org/documentation.html"&gt;Xmonad docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/xmonad"&gt;Xmonad - Arch linux wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tiling-window-managers"/><category term="xmonad"/></entry></feed>